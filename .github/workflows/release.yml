---
name: Build, test and lint (+rleease)
on:
  push: 
    tags:
      - '*'
    branches: ['main']

env:
  BUN_VERSION: latest

jobs:
  lint:
    # Excute eslint & prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      - name: Install dependencies
        run: bun install
      - name: Lint
        run: bun run lint
  compile:
    # Compile with TSC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      - name: Install dependencies
        run: bun install
      - name: Build
        run: bun run build  
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ['compile', 'lint']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      - name: Install dependencies
        run: bun install
      - name: Run docs
        run: bun run gendocs
      - name: Publish generated content to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_dir: docs/
          personal_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Gen changelog
        run: bash .github/bin/changelog.sh > "${GITHUB_WORKSPACE}/changelog.txt"
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ github.workspace }}/changelog.txt
          token: ${{ secrets.GITHUB_TOKEN }}
  releasepkg:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["compile", "lint"]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      - run: bun install
      - run: bun publish
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
